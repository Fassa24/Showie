"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Streaming Availability API
 * Streaming Availability API allows getting streaming availability information of movies and series; and querying the list of available shows on streaming services such as Netflix, Disney+, Apple TV, Max and Hulu across 59 countries!
 *
 * The version of the OpenAPI document: 3.4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamingOptionToJSON = exports.StreamingOptionFromJSONTyped = exports.StreamingOptionFromJSON = exports.instanceOfStreamingOption = exports.StreamingOptionQualityEnum = void 0;
var runtime_1 = require("../runtime");
var Locale_1 = require("./Locale");
var Price_1 = require("./Price");
var StreamingType_1 = require("./StreamingType");
var Subtitle_1 = require("./Subtitle");
/**
 * @export
 */
exports.StreamingOptionQualityEnum = {
    Sd: 'sd',
    Hd: 'hd',
    Qhd: 'qhd',
    Uhd: 'uhd'
};
/**
 * Check if a given object implements the StreamingOption interface.
 */
function instanceOfStreamingOption(value) {
    var isInstance = true;
    isInstance = isInstance && "service" in value;
    isInstance = isInstance && "streamingType" in value;
    isInstance = isInstance && "link" in value;
    isInstance = isInstance && "audios" in value;
    isInstance = isInstance && "subtitles" in value;
    isInstance = isInstance && "availableSince" in value;
    return isInstance;
}
exports.instanceOfStreamingOption = instanceOfStreamingOption;
function StreamingOptionFromJSON(json) {
    return StreamingOptionFromJSONTyped(json, false);
}
exports.StreamingOptionFromJSON = StreamingOptionFromJSON;
function StreamingOptionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'service': json['service'],
        'streamingType': (0, StreamingType_1.StreamingTypeFromJSON)(json['streamingType']),
        'addon': !(0, runtime_1.exists)(json, 'addon') ? undefined : json['addon'],
        'link': json['link'],
        'videoLink': !(0, runtime_1.exists)(json, 'videoLink') ? undefined : json['videoLink'],
        'quality': !(0, runtime_1.exists)(json, 'quality') ? undefined : json['quality'],
        'audios': (json['audios'].map(Locale_1.LocaleFromJSON)),
        'subtitles': (json['subtitles'].map(Subtitle_1.SubtitleFromJSON)),
        'price': !(0, runtime_1.exists)(json, 'price') ? undefined : (0, Price_1.PriceFromJSON)(json['price']),
        'leaving': !(0, runtime_1.exists)(json, 'leaving') ? undefined : json['leaving'],
        'availableSince': json['availableSince'],
    };
}
exports.StreamingOptionFromJSONTyped = StreamingOptionFromJSONTyped;
function StreamingOptionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'service': value.service,
        'streamingType': (0, StreamingType_1.StreamingTypeToJSON)(value.streamingType),
        'addon': value.addon,
        'link': value.link,
        'videoLink': value.videoLink,
        'quality': value.quality,
        'audios': (value.audios.map(Locale_1.LocaleToJSON)),
        'subtitles': (value.subtitles.map(Subtitle_1.SubtitleToJSON)),
        'price': (0, Price_1.PriceToJSON)(value.price),
        'leaving': value.leaving,
        'availableSince': value.availableSince,
    };
}
exports.StreamingOptionToJSON = StreamingOptionToJSON;
