"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Streaming Availability API
 * Streaming Availability API allows getting streaming availability information of movies and series; and querying the list of available shows on streaming services such as Netflix, Disney+, Apple TV, Max and Hulu across 59 countries!
 *
 * The version of the OpenAPI document: 3.4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpcomingChangesResponseSchemaToJSON = exports.UpcomingChangesResponseSchemaFromJSONTyped = exports.UpcomingChangesResponseSchemaFromJSON = exports.instanceOfUpcomingChangesResponseSchema = void 0;
var UpcomingChangeSet_1 = require("./UpcomingChangeSet");
/**
 * Check if a given object implements the UpcomingChangesResponseSchema interface.
 */
function instanceOfUpcomingChangesResponseSchema(value) {
    var isInstance = true;
    isInstance = isInstance && "result" in value;
    isInstance = isInstance && "hasMore" in value;
    isInstance = isInstance && "nextCursor" in value;
    return isInstance;
}
exports.instanceOfUpcomingChangesResponseSchema = instanceOfUpcomingChangesResponseSchema;
function UpcomingChangesResponseSchemaFromJSON(json) {
    return UpcomingChangesResponseSchemaFromJSONTyped(json, false);
}
exports.UpcomingChangesResponseSchemaFromJSON = UpcomingChangesResponseSchemaFromJSON;
function UpcomingChangesResponseSchemaFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'result': (json['result'].map(UpcomingChangeSet_1.UpcomingChangeSetFromJSON)),
        'hasMore': json['hasMore'],
        'nextCursor': json['nextCursor'],
    };
}
exports.UpcomingChangesResponseSchemaFromJSONTyped = UpcomingChangesResponseSchemaFromJSONTyped;
function UpcomingChangesResponseSchemaToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'result': (value.result.map(UpcomingChangeSet_1.UpcomingChangeSetToJSON)),
        'hasMore': value.hasMore,
        'nextCursor': value.nextCursor,
    };
}
exports.UpcomingChangesResponseSchemaToJSON = UpcomingChangesResponseSchemaToJSON;
